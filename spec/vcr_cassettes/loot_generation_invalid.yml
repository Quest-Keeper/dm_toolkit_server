---
http_interactions:
- request:
    method: get
    uri: https://api.open5e.com/magicitems/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 May 2023 15:31:34 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept, origin, Accept-Encoding
      Allow:
      - GET, HEAD, OPTIONS
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - same-origin
      X-Do-App-Origin:
      - c12d71e9-9d94-4a56-a335-8e614fe33195
      Cache-Control:
      - private
      X-Do-Orig-Status:
      - '200'
      Cf-Cache-Status:
      - DYNAMIC
      Last-Modified:
      - Fri, 26 May 2023 15:31:34 GMT
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=i%2FdIGNizULUvpqo325nqayUWBBQWXWXpsH8Hij59txD5GvaOgIwRkV%2FTd2tmSmGuNlZGH6HVWHEjk%2FnjOaD7uJHW%2BQP%2BnhWu%2FdchtV0TAL8Z%2FjVj1ndpS%2B%2BO08Fqhtwnyw%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 7cd710ddbf00e73e-DFW
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 26 May 2023 15:31:34 GMT
- request:
    method: get
    uri: https://api.open5e.com/weapons/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 May 2023 15:31:35 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept, origin, Accept-Encoding
      Allow:
      - GET, HEAD, OPTIONS
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - same-origin
      X-Do-App-Origin:
      - c12d71e9-9d94-4a56-a335-8e614fe33195
      Cache-Control:
      - private
      X-Do-Orig-Status:
      - '200'
      Cf-Cache-Status:
      - DYNAMIC
      Last-Modified:
      - Fri, 26 May 2023 15:31:35 GMT
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=j%2BJE2JHnTL7rppeH5zJuxjvpweGpvOggRVQ5ox%2FgHIgDolDd3BDwCqsoXiFcB%2Bm%2B6AQokJy0qkWxkjcG3hSayt9Po38D%2Fqi08QVLFc9bvX%2F%2FJ3FfdaRFNyPRpeAbquO4qw%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 7cd710dfec39e9b9-DFW
    body:
      encoding: ASCII-8BIT
      string: '{"count":37,"next":null,"previous":null,"results":[{"name":"Club","slug":"club","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"1
        sp","damage_dice":"1d4","damage_type":"bludgeoning","weight":"2 lb.","properties":["light"]},{"name":"Dagger","slug":"dagger","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"2
        gp","damage_dice":"1d4","damage_type":"piercing","weight":"1 lb.","properties":["finesse","light","thrown
        (range 20/60)"]},{"name":"Greatclub","slug":"greatclub","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"2
        sp","damage_dice":"1d8","damage_type":"bludgeoning","weight":"10 lb.","properties":["two-handed"]},{"name":"Handaxe","slug":"handaxe","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        gp","damage_dice":"1d6","damage_type":"slashing","weight":"2 lb.","properties":["light","thrown
        (range 20/60)"]},{"name":"Javelin","slug":"javelin","category":"Simple Melee
        Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        sp","damage_dice":"1d6","damage_type":"piercing","weight":"2 lb.","properties":["thrown
        (range 30/120)"]},{"name":"Light hammer","slug":"light-hammer","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"2
        gp","damage_dice":"1d4","damage_type":"bludgeoning","weight":"2 lb.","properties":["light","thrown
        (range 20/60)"]},{"name":"Mace","slug":"mace","category":"Simple Melee Weapons","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        gp","damage_dice":"1d6","damage_type":"bludgeoning","weight":"4 lb.","properties":[]},{"name":"Quarterstaff","slug":"quarterstaff","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"2
        sp","damage_dice":"1d6","damage_type":"bludgeoning","weight":"4 lb.","properties":["versatile
        (1d8)"]},{"name":"Sickle","slug":"sickle","category":"Simple Melee Weapons","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"1
        gp","damage_dice":"1d4","damage_type":"slashing","weight":"2 lb.","properties":["light"]},{"name":"Spear","slug":"spear","category":"Simple
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"1
        gp","damage_dice":"1d6","damage_type":"piercing","weight":"3 lb.","properties":["thrown
        (range 20/60)","versatile (1d8)"]},{"name":"Crossbow, light","slug":"crossbow-light","category":"Simple
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"25
        gp","damage_dice":"1d8","damage_type":"piercing","weight":"5 lb.","properties":["ammunition
        (range 80/320)","loading","two-handed"]},{"name":"Dart","slug":"dart","category":"Simple
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        cp","damage_dice":"1d4","damage_type":"piercing","weight":"1/4 lb.","properties":["finesse","thrown
        (range 20/60)"]},{"name":"Shortbow","slug":"shortbow","category":"Simple Ranged
        Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"25
        gp","damage_dice":"1d6","damage_type":"piercing","weight":"2 lb.","properties":["ammunition
        (range 80/320)","two-handed"]},{"name":"Sling","slug":"sling","category":"Simple
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"1
        sp","damage_dice":"1d4","damage_type":"bludgeoning","weight":"0 lb.","properties":["ammunition
        (range 30/120)"]},{"name":"Battleaxe","slug":"battleaxe","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"1d8","damage_type":"slashing","weight":"4 lb.","properties":["versatile
        (1d10)"]},{"name":"Flail","slug":"flail","category":"Martial Melee Weapons","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"1d8","damage_type":"bludgeoning","weight":"2 lb.","properties":[]},{"name":"Glaive","slug":"glaive","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"20
        gp","damage_dice":"1d10","damage_type":"slashing","weight":"6 lb.","properties":["heavy","reach","two-handed"]},{"name":"Greataxe","slug":"greataxe","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"30
        gp","damage_dice":"1d12","damage_type":"slashing","weight":"7 lb.","properties":["heavy","two-handed"]},{"name":"Greatsword","slug":"greatsword","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"50
        gp","damage_dice":"2d6","damage_type":"slashing","weight":"6 lb.","properties":["heavy","two-handed"]},{"name":"Halberd","slug":"halberd","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"20
        gp","damage_dice":"1d10","damage_type":"slashing","weight":"6 lb.","properties":["heavy","reach","two-handed"]},{"name":"Lance","slug":"lance","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"1d12","damage_type":"piercing","weight":"6 lb.","properties":["reach","special"]},{"name":"Longsword","slug":"longsword","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"15
        gp","damage_dice":"1d8","damage_type":"slashing","weight":"3 lb.","properties":["versatile
        (1d10)"]},{"name":"Maul","slug":"maul","category":"Martial Melee Weapons","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"2d6","damage_type":"bludgeoning","weight":"10 lb.","properties":["heavy","two-handed"]},{"name":"Morningstar","slug":"morningstar","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"15
        gp","damage_dice":"1d8","damage_type":"piercing","weight":"4 lb.","properties":null},{"name":"Pike","slug":"pike","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        gp","damage_dice":"1d10","damage_type":"piercing","weight":"18 lb.","properties":["heavy","reach","two-handed"]},{"name":"Rapier","slug":"rapier","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"25
        gp","damage_dice":"1d8","damage_type":"piercing","weight":"2 lb.","properties":["finesse"]},{"name":"Scimitar","slug":"scimitar","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"25
        gp","damage_dice":"1d6","damage_type":"slashing","weight":"3 lb.","properties":["finesse","light"]},{"name":"Shortsword","slug":"shortsword","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"1d6","damage_type":"piercing","weight":"2 lb.","properties":["finesse","light"]},{"name":"Trident","slug":"trident","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        gp","damage_dice":"1d6","damage_type":"piercing","weight":"4 lb.","properties":["thrown
        (range 20/60)","versatile (1d8)"]},{"name":"War pick","slug":"war-pick","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"5
        gp","damage_dice":"1d8","damage_type":"piercing","weight":"2 lb.","properties":[]},{"name":"Warhammer","slug":"warhammer","category":"Martial
        Melee Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"15
        gp","damage_dice":"1d8","damage_type":"bludgeoning","weight":"2 lb.","properties":["versatile
        (1d10)"]},{"name":"Whip","slug":"whip","category":"Martial Melee Weapons","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"2
        gp","damage_dice":"1d4","damage_type":"slashing","weight":"3 lb.","properties":["finesse","reach"]},{"name":"Blowgun","slug":"blowgun","category":"Martial
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"10
        gp","damage_dice":"1","damage_type":"piercing","weight":"1 lb.","properties":["ammunition
        (range 25/100)","loading"]},{"name":"Crossbow, hand","slug":"crossbow-hand","category":"Martial
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"75
        gp","damage_dice":"1d6","damage_type":"piercing","weight":"3 lb.","properties":["ammunition
        (range 30/120)","light","loading"]},{"name":"Crossbow, heavy","slug":"crossbow-heavy","category":"Martial
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"50
        gp","damage_dice":"1d10","damage_type":"piercing","weight":"18 lb.","properties":["ammunition
        (range 100/400)","heavy","loading","two-handed"]},{"name":"Longbow","slug":"longbow","category":"Martial
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"50
        gp","damage_dice":"1d8","damage_type":"piercing","weight":"2 lb.","properties":["ammunition
        (range 150/600)","heavy","two-handed"]},{"name":"Net","slug":"net","category":"Martial
        Ranged Weapons","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","cost":"1
        gp","damage_dice":"0","damage_type":"","weight":"3 lb.","properties":["special","thrown
        (range 5/15)"]}]}'
  recorded_at: Fri, 26 May 2023 15:31:35 GMT
- request:
    method: get
    uri: https://api.open5e.com/armor/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 May 2023 15:31:35 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept, origin, Accept-Encoding
      Allow:
      - GET, HEAD, OPTIONS
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - same-origin
      X-Do-App-Origin:
      - c12d71e9-9d94-4a56-a335-8e614fe33195
      Cache-Control:
      - private
      X-Do-Orig-Status:
      - '200'
      Cf-Cache-Status:
      - DYNAMIC
      Last-Modified:
      - Fri, 26 May 2023 15:31:35 GMT
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=KZXTjW8yTVf1768tKKHeUtboDISGyxb19VaaNi4DoI1Q8EWg2pFbdD8KMqFl3S4WQY7bcTg6MoLuJioBF8%2F7NeGTMkPHDjN7EaBmgvnqeK%2BJrjxSjrpcf5ad8J75QZRh0g%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 7cd710e2997828dd-DFW
    body:
      encoding: ASCII-8BIT
      string: '{"count":18,"next":null,"previous":null,"results":[{"name":"Unarmored","slug":"unarmored","category":"No
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":10,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"10
        + Dex modifier","strength_requirement":null,"cost":"5 gp","weight":"","stealth_disadvantage":false},{"name":"Padded","slug":"padded","category":"Light
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":11,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"11
        + Dex modifier","strength_requirement":null,"cost":"5 gp","weight":"","stealth_disadvantage":true},{"name":"Leather","slug":"leather","category":"Light
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":11,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"11
        + Dex modifier","strength_requirement":null,"cost":"10 gp","weight":"","stealth_disadvantage":false},{"name":"Studded
        Leather","slug":"studded-leather","category":"Light Armor","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":12,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"12
        + Dex modifier","strength_requirement":null,"cost":"45 gp","weight":"","stealth_disadvantage":false},{"name":"Hide","slug":"hide","category":"Medium
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":12,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":2,"ac_string":"12
        + Dex modifier (max 2)","strength_requirement":null,"cost":"10 gp","weight":"","stealth_disadvantage":false},{"name":"Chain
        Shirt","slug":"chain-shirt","category":"Medium Armor","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":13,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":2,"ac_string":"13
        + Dex modifier (max 2)","strength_requirement":null,"cost":"50 gp","weight":"","stealth_disadvantage":false},{"name":"Scale
        mail","slug":"scale-mail","category":"Medium Armor","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":14,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":2,"ac_string":"14
        + Dex modifier (max 2)","strength_requirement":null,"cost":"50 gp","weight":"","stealth_disadvantage":true},{"name":"Breastplate","slug":"breastplate","category":"Medium
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":14,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":2,"ac_string":"14
        + Dex modifier (max 2)","strength_requirement":null,"cost":"400 gp","weight":"","stealth_disadvantage":false},{"name":"Half
        plate","slug":"half-plate","category":"Medium Armor","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":15,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":2,"ac_string":"15
        + Dex modifier (max 2)","strength_requirement":null,"cost":"750 gp","weight":"","stealth_disadvantage":true},{"name":"Ring
        mail","slug":"ring-mail","category":"Heavy Armor","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":14,"plus_dex_mod":false,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"14","strength_requirement":null,"cost":"30
        gp","weight":"","stealth_disadvantage":true},{"name":"Chain mail","slug":"chain-mail","category":"Heavy
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":16,"plus_dex_mod":false,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"16","strength_requirement":13,"cost":"75
        gp","weight":"","stealth_disadvantage":true},{"name":"Splint","slug":"splint","category":"Heavy
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":17,"plus_dex_mod":false,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"17","strength_requirement":15,"cost":"200
        gp","weight":"","stealth_disadvantage":true},{"name":"Plate Mail","slug":"plate-mail","category":"Heavy
        Armor","document__slug":"wotc-srd","document__title":"Systems Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":18,"plus_dex_mod":false,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"18","strength_requirement":15,"cost":"1500
        gp","weight":"","stealth_disadvantage":true},{"name":"Mage Armor","slug":"mage-armor","category":"Spell","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":13,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"13
        + Dex modifier","strength_requirement":null,"cost":"0 gp","weight":"","stealth_disadvantage":false},{"name":"Unarmored
        Defense (Barbarian)","slug":"unarmored-defense-barbarian","category":"Class
        Feature","document__slug":"wotc-srd","document__title":"Systems Reference
        Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":10,"plus_dex_mod":true,"plus_con_mod":true,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"10
        + Dex modifier + Con modifier","strength_requirement":null,"cost":"0 gp","weight":"","stealth_disadvantage":false},{"name":"Unarmored
        Defense (Monk)","slug":"unarmored-defense-monk","category":"Class Feature","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":10,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":true,"plus_flat_mod":0,"plus_max":0,"ac_string":"10
        + Dex modifier + Wis modifier","strength_requirement":null,"cost":"0 gp","weight":"","stealth_disadvantage":false},{"name":"Draconic
        Resilience","slug":"draconic-resilience","category":"Class Feature","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":13,"plus_dex_mod":true,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":0,"plus_max":0,"ac_string":"13
        + Dex modifier","strength_requirement":null,"cost":"0 gp","weight":"","stealth_disadvantage":false},{"name":"Shield","slug":"shield","category":"Shield","document__slug":"wotc-srd","document__title":"Systems
        Reference Document","document__license_url":"http://open5e.com/legal","document__url":"http://dnd.wizards.com/articles/features/systems-reference-document-srd","base_ac":0,"plus_dex_mod":false,"plus_con_mod":false,"plus_wis_mod":false,"plus_flat_mod":2,"plus_max":0,"ac_string":"0
        +2","strength_requirement":null,"cost":"10 gp","weight":"","stealth_disadvantage":false}]}'
  recorded_at: Fri, 26 May 2023 15:31:35 GMT
- request:
    method: get
    uri: https://api.open5e.com/spells/?casting_time=&casting_time__iexact=&casting_time__in=&components=&concentration=&dnd_class=&dnd_class__icontains=&dnd_class__iexact=&dnd_class__in=&document__slug=&document__slug__iexact=&document__slug__in=&duration=&duration__iexact=&duration__in=&level_int=&name=&name__iexact=&requires_concentration=unknown&requires_material_components=unknown&requires_somatic_components=unknown&requires_verbal_components=unknown&school=&school__iexact=&school__in=&slug=&slug__iexact=&slug__in=&spell_level=&spell_level__gt=&spell_level__gte=&spell_level__lt=&spell_level__lte=3&spell_level__range=&spell_lists_not=&target_range_sort=&target_range_sort__gt=&target_range_sort__gte=&target_range_sort__lt=&target_range_sort__lte=&target_range_sort__range=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 May 2023 15:31:36 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept, origin, Accept-Encoding
      Allow:
      - GET, HEAD, OPTIONS
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - same-origin
      X-Do-App-Origin:
      - c12d71e9-9d94-4a56-a335-8e614fe33195
      Cache-Control:
      - private
      X-Do-Orig-Status:
      - '200'
      Cf-Cache-Status:
      - DYNAMIC
      Last-Modified:
      - Fri, 26 May 2023 15:31:36 GMT
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=xA2744pvZ4NLZQgahtOrUKPeUfJv9%2FRUhais1URxgVb56rifTceFy%2FJKScBycgMSdWTRGPP3icQzJ2RuVCkCR6lrmorgYK85IfmporB5NiWTMfJZVervU3owPEHc46KbrQ%3D%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 7cd710e4cc55e792-DFW
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 26 May 2023 15:31:36 GMT
recorded_with: VCR 6.1.0
